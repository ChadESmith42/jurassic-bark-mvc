@model IEnumerable<JurassicBark.DATA.EF.ResortLocation>

@{
    ViewBag.Title = "Jurassic Bark Locations";
}
<h2>@ViewBag.Title</h2>

<div id='map'>
</div>

<div class="card-group">
    @foreach (var item in Model)
    {
        <div class="col-md-3">
            <div class="card">
                @*<img class="card-img-top" src="..." alt="Card image cap">*@
                <div class="card-body">
                    <h3 class="card-title">@Html.DisplayFor(modelItem => item.ResortName) </h3>
                    <p class="card-text">
                        Located at @Html.DisplayFor(modelItem => item.Address), @Html.DisplayFor(modelItem => item.City), @Html.DisplayFor(modelItem => item.State) @Html.DisplayFor(modelItem => item.ZipCode).
                    </p>
                    <p>
                        This facility has capacity for <span class="badge badge-primary badge-pill">@Html.DisplayFor(modelItem => item.ReservationLimit)</span> animals.
                    </p>

                    @if (item.countRes <= item.ReservationLimit)
                    {
                        if (item.countRes > 1 || item.countRes == 0)
                        {
                            <p>There are currently <span class="badge badge-info badge-pill">@item.countRes</span> reservations at this facility for @DateTime.Now.ToShortDateString().</p>

                        }
                        if (item.countRes == 1)
                        {
                            <p>
                                There is currently <span class="badge badge-info badge-pill">@item.countRes</span> reservation at this facility for @DateTime.Now.ToShortDateString().
                            </p>
                        }
                    }
                    else
                    {
                        <p>There are currently <span class="badge badge-primary badge-pill">@item.countRes</span> reservations at this facility for @DateTime.Now.ToShortDateString().</p>
                    }



                    @Html.ActionLink("Details", "Details", new { id = item.ResortLocationID }, htmlAttributes: new { @class = "btn btn-primary" })
                    @if (item.countRes < item.ReservationLimit && !User.IsInRole("Employee"))
                    {
                        @Html.ActionLink("Book Now!", "Create", "Reservations", new { id = item.ResortLocationID }, htmlAttributes: new { @class = "btn btn-secondary" })
                    }



                    @*<a href="@Url.Action("Create","Reservations", { new item.ResourtLocationid = item.ResortLocationID })">Reserve your spot!</a>*@
                </div>
            </div>
        </div>

    }
</div>

<div class="spaced">
    @if (User.IsInRole("Admin"))
    {
        <p>

            @Html.ActionLink("Create New", "Create", null, htmlAttributes: new { @class = "btn btn-info" })
        </p>
    }
</div>

<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.46.0/mapbox-gl.js'></script>
<script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v3.1.3/mapbox-gl-directions.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.46.0/mapbox-gl.css' rel='stylesheet' />
<link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v3.1.3/mapbox-gl-directions.css' type='text/css' />

<script>

    //Since JavaScript doesn't like inserting a FOREACH into the middle of a JSON file, I've generated the JSON file
    //using RAZOR and JavaScript below. The variable mapJson will then be substituted for the section of code that I
    //wanted to generate from the DB and insert into the JSON.
    //var mapJson = "{'type': 'FeatureCollection','features': [";
    
    //This section inserts attributes from the DB into a string that will be treated as JSON later.
    @*@foreach (var item in Model)
    {
        @:mapJson += "{'type': 'Feature', 'properties': { 'description': '<h3>@item.ResortName</h3><p>Located at @item.Address, @item.City, @item.State @item.ZipCode.</p><div> @*<a href='@Url.Action("Create","Reservations")' class='btn btn-primary' role='button'>Book now!</a></div>'},'geometry': { 'type': 'Point','coordinates': [@item.Coordinates.TrimEnd()]}}, ";
    }*@

    //mapJson += " {'type': 'Feature', 'properties': {'description': '<div class='mobile'><h3>Evil League of Evil Training Grounds</h3><p>Located at Evil League of Evil HQ.</p></div>'},'geometry': {'type': 'Point','coordinates': [0, 0]}}]}}";
    
   //console.log(mapJson);

    function myfunction(x) {
        if (x.matches) {
            hideNav = true;
        }
        else {
            hideNave = false;
        }
    }

    var x = window.matchMedia("(max-width: 450px)")
    myfunction(x)
    x.addListener(myfunction)


    mapboxgl.accessToken = 'pk.eyJ1IjoiY3NtaXRoNzU1MyIsImEiOiJjaWY4OXU3NXkxbzA4c2hsem00Y3pscmMyIn0.9GAiQ-7yW9AnQKcAooeytA';
    var map = new mapboxgl.Map({
        container: 'map', // container id
        style: 'mapbox://styles/mapbox/streets-v10', // stylesheet location
        center: [-94.60, 39.00], // starting position [lng, lat]
        zoom: 10 // starting zoom
    });
    map.on('load', function () {
        map.loadImage('https://i.imgur.com/MK4NUzI.png', function (error, image) {
            if (error) throw error;
            map.addImage('point', image);
            map.addLayer({
                "id": "points",
                "type": "symbol",
                "source": {
                    "type": "geojson",
                    "data": {
                        "type": "FeatureCollection",
                        "features": [{
                            "type": "Feature", "properties": {
                                "description": "<h3>Betty Brook</h3><p>Located at 8646 Lee Blvd, Leawood, KS 66206.</p><div> <a href='http://localhost:51171/Reservations/Create' class='btn btn-primary' role='button'>Book now!</a></div>"
                            },
                            "geometry": {
                                "type": "Point",
                                "coordinates": [-94.614705, 38.971796]
                            }
                        },
                        {
                            "type": "Feature", "properties": {
                                "description": "<h3>Leawoof</h3><p>Located at 106th & Lee Boulevard, Leawood, KS 66211.</p><div> <a href='http://localhost:51171/Reservations/Create' class='btn btn-primary' role='button'>Book now!</a></div>"
                            },
                            "geometry": {
                                "type": "Point",
                                "coordinates": [-94.6116024, 38.9332894]
                            }
                        },
                        {
                            "type": "Feature", "properties": {
                                "description": "<div class='mobile'><h3>Swope Dog Park</h3><p>Located at 5051 E Gregory Blvd, Kansas City, MO 64132.</p><div> <a href='http://localhost:51171/Reservations/Create' class='btn btn-primary' role='button'>Book now!</a></div></div>"
                            },
                            "geometry": {
                                "type": "Point",
                                "coordinates": [-94.5275897, 38.9966864]
                            }
                        },
                        {
                            "type": "Feature", "properties": {
                                "description": "<div class='mobile'><h3>Penn Valley Off Leash Dog Park</h3><p>Located at W 28th & Wyandotte St, Kansas City, MO 64108.</p><div> <a href='http://localhost:51171/Reservations/Create' class='btn btn-primary' role='button'>Book now!</a></div></div>"
                            },
                            "geometry": {
                                "type": "Point",
                                "coordinates": [-94.588766, 39.0757432]
                            }
                        },
                        {
                            "type": "Feature", "properties": {
                                "description": "<div class='mobile'><h3>Stoll Off-Leash Dog Park</h3><p>Located at 12500 W 119th St, Overland Park, KS 66210.</p><div> <a href='http://localhost:51171/Reservations/Create' class='btn btn-primary' role='button'>Book now!</a></div></div>"
                            },
                            "geometry": {
                                "type": "Point",
                                "coordinates": [-94.730676, 38.916525]
                            }
                        },
                        {
                            "type": "Feature", "properties": {
                                "description": "<div class='mobile'><h3>Tails & Trails Dog Park</h3><p>Located at 8005 E 139th St, Grandview, MO 64030.</p><div> <a href='http://localhost:51171/Reservations/Create' class='btn btn-primary' role='button'>Book now!</a></div></div>"
                            },
                            "geometry": {
                                "type": "Point",
                                "coordinates": [-94.507984, 38.871705]
                            }
                        },
                        {
                            "type": "Feature", "properties": {
                                "description": "<div class='mobile'><h3>West Terrace Dog Park</h3><p>Located at 750 Pennsylvania Ave, Kansas City, MO 64105.</p><div> <a href='http://localhost:51171/Reservations/Create' class='btn btn-primary' role='button'>Book now!</a></div></div>"
                            },
                            "geometry": {
                                "type": "Point",
                                "coordinates": [-94.59091, 39.105213]
                            }
                        }

                        ]
                    }
                },
                    "layout": {
                        "icon-image": "point",
                        "icon-size": .70
                    }
                });
        });
    });

    //Creates a pop-up when you click on the icon for each feature
    map.on('click', 'points', function (e) {
        var coordinates = e.features[0].geometry.coordinates.slice();
        var description = e.features[0].properties.description;

        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
        }
        //Create the actual pop-up
        new mapboxgl.Popup()
            .setLngLat(coordinates)
            .setHTML(description)
            .addTo(map);
    });
    //Changes the mouse to a pointer when over the icon
    map.on('mouseenter', 'points', function () {
        map.getCanvas().style.cursor = 'pointer';
    });

    //Changes the mouse back to default when moving off of the icon
    map.on('mouseleave', 'points', function () {
        map.getCanvas().style.cursor = '';
    });

    // Add geolocate control to the map.
    map.addControl(new mapboxgl.GeolocateControl({
        positionOptions: {
            enableHighAccuracy: true
        },
        trackUserLocation: true
    }));

    //Add navigation tools for mobile users.
    map.addControl(new mapboxgl.NavigationControl());

    //Add scale bar to the bottom of the map for spatial reference
    var scale = new mapboxgl.ScaleControl({
        maxWidth: 100,
        unit: 'imperial'
    });
    map.addControl(scale);

    //Add driving directions
    map.addControl(new MapboxDirections({
        accessToken: mapboxgl.accessToken,
        unit: 'imperial',
        controls: {
            inputs : 'hideNav',
            instructions : 'hideNav'
        }
    }), 'top-left');

    //scale.setUnit('metric');
</script>

